<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nestjs on O programador moderno</title><link>http://updevblog.com/pt/categories/nestjs/</link><description>Recent content in nestjs on O programador moderno</description><generator>Hugo -- gohugo.io</generator><language>pt-br</language><lastBuildDate>Wed, 29 Mar 2023 03:00:00 +0000</lastBuildDate><atom:link href="http://updevblog.com/pt/categories/nestjs/index.xml" rel="self" type="application/rss+xml"/><item><title>Construindo uma API de Chat em Tempo Real com NestJS, WebSocket e Prisma</title><link>http://updevblog.com/pt/post/construindo-uma-api-de-chat-em-tempo-real-com-nestjs-websocket-e-prisma/</link><pubDate>Wed, 29 Mar 2023 03:00:00 +0000</pubDate><guid>http://updevblog.com/pt/post/construindo-uma-api-de-chat-em-tempo-real-com-nestjs-websocket-e-prisma/</guid><description>Introdução Neste artigo, vamos explorar como criar uma aplicação de chat em tempo real usando NestJS, WebSocket e Prisma.</description></item><item><title>NestJS: Adicionando Autenticação e Autorização com JWT e Passport.js</title><link>http://updevblog.com/pt/post/nestjs-adicionando-autenticacao-e-autorizacao-com-jwt-e-passport.js/</link><pubDate>Tue, 28 Mar 2023 03:00:00 +0000</pubDate><guid>http://updevblog.com/pt/post/nestjs-adicionando-autenticacao-e-autorizacao-com-jwt-e-passport.js/</guid><description>Introdução No artigo anterior, criamos uma aplicação NestJS com Prisma, Docker e PostgreSQL, implementando um CRUD de usuários.</description></item><item><title>Criando uma Aplicação NestJS com Prisma, Docker e PostgreSQL: Um CRUD de Usuários</title><link>http://updevblog.com/pt/post/criando-uma-aplicacao-nestjs-com-prisma-docker-e-postgresql-um-crud-de-usuarios/</link><pubDate>Mon, 27 Mar 2023 03:00:00 +0000</pubDate><guid>http://updevblog.com/pt/post/criando-uma-aplicacao-nestjs-com-prisma-docker-e-postgresql-um-crud-de-usuarios/</guid><description>Introdução Neste artigo, vamos explorar como criar uma aplicação NestJS, utilizando o Prisma como ORM (Object-Relational Mapping), o Docker para o ambiente de desenvolvimento e o PostgreSQL como banco de dados.</description></item></channel></rss>